{
  "variables": {
    "cloud_token": "{{env `CLOUD_TOKEN`}}",
    "cpus": "2",
    "disk_size": "81960",
    "headless": "true",
    "iso_checksum": "737ae7041212c628de5751d15c3016058b0e833fdc32e7420209b76ca3d0a535",
    "iso_checksum_type": "sha256",
    "iso_name": "ubuntu-16.04.2-server-amd64.iso",
    "memory": "2048",
    "mirror": "http://releases.ubuntu.com",
    "mirror_directory": "16.04.2",
    "preseed_path": "preseed.cfg",
    "template": "",
    "vagrant_cloud_user": "",
    "version": "1.0.{{ timestamp }}"
  },
  "builders": [
    {
      "boot_command": [
        "<enter><wait><f6><esc><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
        "/install/vmlinuz<wait>",
        " auto<wait>",
        " console-setup/ask_detect=false<wait>",
        " console-setup/layoutcode=us<wait>",
        " console-setup/modelcode=pc105<wait>",
        " debconf/frontend=noninteractive<wait>",
        " debian-installer=en_US.UTF-8<wait>",
        " fb=false<wait>",
        " initrd=/install/initrd.gz<wait>",
        " kbd-chooser/method=us<wait>",
        " keyboard-configuration/layout=USA<wait>",
        " keyboard-configuration/variant=USA<wait>",
        " locale=en_US.UTF-8<wait>",
        " netcfg/get_domain=vm<wait>",
        " netcfg/get_hostname=vagrant<wait>",
        " grub-installer/bootdev=/dev/sda<wait>",
        " noapic<wait>",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/{{user `preseed_path`}}<wait>",
        " -- <wait>",
        "<enter><wait>"
      ],
      "boot_wait": "10s",
      "disk_size": "{{user `disk_size`}}",
      "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
      "guest_os_type": "Ubuntu_64",
      "hard_drive_interface": "sata",
      "headless": "{{ user `headless` }}",
      "http_directory": "http",
      "iso_checksum": "{{user `iso_checksum`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "iso_url": "{{user `mirror`}}/{{user `mirror_directory`}}/{{user `iso_name`}}",
      "output_directory": "packer-{{user `template`}}-virtualbox",
      "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now",
      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_username": "vagrant",
      "ssh_wait_timeout": "10000s",
      "type": "virtualbox-iso",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "{{ user `memory` }}"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "{{ user `cpus` }}"
        ]
      ],
      "virtualbox_version_file": ".vbox_version",
      "vm_name": "{{ user `template` }}"
    }
  ],
  "post-processors": [
    [
      {
        "type": "vagrant",
        "output": "build/{{user `template`}}.box",
        "compression_level": 6
      },
      {
        "type": "vagrant-cloud",
        "box_tag": "{{user `vagrant_cloud_user`}}/{{user `template`}}",
        "access_token": "{{user `cloud_token`}}",
        "version": "{{user `version`}}"
      }
    ]
  ],
  "provisioners": [
    {
      "environment_vars": [
        "HOME_DIR=/home/vagrant"
      ],
      "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'",
      "scripts": [
        "scripts/update.sh",
        "scripts/sshd.sh",
        "scripts/networking.sh",
        "scripts/sudoers.sh",
        "scripts/vagrant.sh",
        "scripts/virtualbox.sh",
        "scripts/ansible.sh"
      ],
      "type": "shell"
    },
    {
      "type": "ansible-local",
      "playbook_file": "provision/playbooks/{{user `template`}}.yml",
      "playbook_dir": "provision/playbooks/"
    },
    {
      "environment_vars": [
        "HOME_DIR=/home/vagrant"
      ],
      "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'",
      "scripts": [
        "scripts/cleanup.sh",
        "scripts/minimize.sh"
      ],
      "type": "shell"
    }
  ]
}
